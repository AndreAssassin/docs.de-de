- name: Klassen und Strukturen
  href: index.md
  items:
    - name: Klassen
      href: classes.md
    - name: erzwingen
      href: objects.md
    - name: Strukturen
      items:
        - name: Übersicht
          href: structs.md
        - name: Verwenden von Strukturen
          href: using-structs.md
    - name: Vererbung
      href: inheritance.md
    - name: Polymorphismus
      items:
        - name: Übersicht
          href: polymorphism.md
        - name: Versionsverwaltung mit den Schlüsselwörtern „override“ und „new“
          href: versioning-with-the-override-and-new-keywords.md
        - name: Wann müssen die Schlüsselwörter „override“ und „new“ verwendet werden?
          href: knowing-when-to-use-override-and-new-keywords.md
        - name: 'Vorgehensweise: Überschreiben der ToString-Methode'
          href: how-to-override-the-tostring-method.md
    - name: Member
      items:
        - name: Member (Übersicht)
          href: members.md
        - name: Abstrakte und versiegelte Klassen und Klassenmember
          href: abstract-and-sealed-classes-and-class-members.md
        - name: Statische Klassen und statische Klassenmember
          href: static-classes-and-static-class-members.md
        - name: Zugriffsmodifizierer
          href: access-modifiers.md
        - name: Felder
          href: fields.md
        - name: Konstanten
          href: constants.md
        - name: 'Vorgehensweise: Definieren von abstrakten Eigenschaften'
          href: how-to-define-abstract-properties.md
        - name: 'Vorgehensweise: Definieren von Konstanten in C#'
          href: how-to-define-constants.md
    - name: Eigenschaften
      items:
        - name: Übersicht über Eigenschaften
          href: properties.md
        - name: Verwenden von Eigenschaften
          href: using-properties.md
        - name: Schnittstelleneigenschaften
          href: interface-properties.md
        - name: Einschränken des Zugriffsmethodenzugriffs
          href: restricting-accessor-accessibility.md
        - name: 'Vorgehensweise: Deklarieren und Verwenden von Lese-/Schreibeigenschaften'
          href: how-to-declare-and-use-read-write-properties.md
        - name: Automatisch implementierte Eigenschaften
          href: auto-implemented-properties.md
        - name: 'Vorgehensweise: Implementieren einer einfachen Klasse mit automatisch implementierten Eigenschaften'
          href: how-to-implement-a-lightweight-class-with-auto-implemented-properties.md
    - name: Methoden
      items:
        - name: Methoden (Übersicht)
          href: methods.md
        - name: Lokale Funktionen
          href: local-functions.md
        - name: Ref-Rückgaben und lokale ref-Variablen
          href: ref-returns.md
        - name: Parameter
          items:
            - name: Übergeben von Parametern
              href: passing-parameters.md
            - name: Übergeben von Werttypparametern
              href: passing-value-type-parameters.md
            - name: Übergeben von Verweistypparametern
              href: passing-reference-type-parameters.md
            - name: 'Vorgehensweise: Unterschiede zwischen dem Übergeben einer Struktur und dem Übergeben eines Klassenverweises an eine Methode'
              href: how-to-know-the-difference-passing-a-struct-and-passing-a-class-to-a-method.md
        - name: Implizit typisierte lokale Variablen
          href: implicitly-typed-local-variables.md
        - name: 'Vorgehensweise: Verwenden von implizit typisierten lokalen Variablen und Arrays in einem Abfrageausdruck'
          href: how-to-use-implicitly-typed-local-variables-and-arrays-in-a-query-expression.md
        - name: Erweiterungsmethoden
          href: extension-methods.md
        - name: 'Vorgehensweise: Implementieren und Aufrufen einer benutzerdefinierten Erweiterungsmethode'
          href: how-to-implement-and-call-a-custom-extension-method.md
        - name: 'Vorgehensweise: Erstellen einer neuen Methode für eine Enumeration'
          href: how-to-create-a-new-method-for-an-enumeration.md
        - name: Benannte und optionale Argumente
          href: named-and-optional-arguments.md
        - name: 'Vorgehensweise: Verwenden von benannten und optionalen Argumenten in der Office-Programmierung'
          href: how-to-use-named-and-optional-arguments-in-office-programming.md
    - name: Konstruktoren
      items:
        - name: Konstruktoren (Übersicht)
          href: constructors.md
        - name: Verwenden von Konstruktoren
          href: using-constructors.md
        - name: Instanzenkonstruktoren
          href: instance-constructors.md
        - name: Private Konstruktoren
          href: private-constructors.md
        - name: Statische Konstruktoren
          href: static-constructors.md
        - name: 'Vorgehensweise: Schreiben eines Kopierkonstruktors'
          href: how-to-write-a-copy-constructor.md
    - name: Finalizer
      href: destructors.md
    - name: Objekt- und Auflistungsinitialisierer
      href: object-and-collection-initializers.md
    - name: 'Vorgehensweise: Initialisieren von Objekten mithilfe eines Objektinitialisierers'
      href: how-to-initialize-objects-by-using-an-object-initializer.md
    - name: 'Vorgehensweise: Initialisieren eines Wörterbuchs mit einem Auflistungsinitialisierer'
      href: how-to-initialize-a-dictionary-with-a-collection-initializer.md
    - name: Geschachtelte Typen
      href: nested-types.md
    - name: Partielle Klassen und Methoden
      href: partial-classes-and-methods.md
    - name: Anonyme Typen
      href: anonymous-types.md
    - name: 'Vorgehensweise: Zurückgeben von Teilmengen von Elementeigenschaften in einer Abfrage'
      href: how-to-return-subsets-of-element-properties-in-a-query.md